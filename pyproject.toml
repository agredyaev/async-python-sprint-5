[coverage.report]
show_missing = true

[coverage.run]
branch = true

[dependency-groups]
dev = [
  "coverage>=7.6.1",
  "mypy>=1.14.0",
  "pre-commit>=4.0.1",
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "ruff>=0.8.4",
  "pyright>=1.1.384",
  "polyfactory>=2.17.0",
  "pytest-mock>=3.14.0",
  "pytest-asyncio>=0.25.3",
]

[project]
description = "Async Python sprint 4"
name = "async-python-sprint-4"
readme = "README.md"
requires-python = ">=3.12, <4.0"
version = "0.1.0"

[tool.coverage.run]
omit = ["*/tests/*"]

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
explicit_package_bases = true
follow_imports = "skip"
ignore_missing_imports = true
implicit_reexport = false
plugins = ["pydantic.mypy"]  # https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
pretty = true
strict = true
warn_return_any = false

[[tool.mypy.overrides]]
ignore_errors = true
module = ["tests.*", "migrations.*", "models.py"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"
filterwarnings = [
  "ignore:.*pkg_resources.declare_namespace\\('sphinxcontrib'\\).*:DeprecationWarning",
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
]
markers = [
  # Marks tests that use `attrs` library
  "attrs",
]

[tool.ruff]
force-exclude = true
line-length = 120
respect-gitignore = true

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = true

[tool.ruff.lint]
exclude = [
  "*migrations*",
]
ignore = [
  "D",  # pydocstyle
  "TD",  # flake8-todos
  "FIX",  # flake8-fixme
  "ANN",  # flake8-annotations (handled by mypy)
  "EM",  # flake8-errmsg - String literals in exceptions
  "E501",  # pycodestyle - line too long (handled by formatter)
  "COM812",  # forced by ruff formatter
  "ISC001",  # forced by ruff formatter
  "TRY003",  # long message for exceptions
  "EM101",  # allow string literals for exceptions
  "EM102",  # allow f-string literals for exceptions
  "TC001",
  "TC002",
  "TC003",
  "TC004",
  "ARG002",  # Unused method argument
]
select = ["ALL"]
unfixable = [
  "F",  # pyflakes
  "ERA",  # eradicate - commented-out code
]

[tool.ruff.lint.flake8-tidy-imports]  # https://docs.astral.sh/ruff/settings/#lintflake8-tidy-imports
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]
quote-annotations = true  # https://docs.astral.sh/ruff/settings/#lint_flake8-type-checking_quote-annotations

[tool.ruff.lint.isort]  # https://docs.astral.sh/ruff/settings/#isort
known-first-party = ["src", "tests", "core", "api", "conf", "models", "migrations", "repositories", "helpers", "schemas", "services"]
lines-between-types = 1
section-order = [
  "future",
  "typing",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
split-on-trailing-comma = false

[tool.ruff.lint.isort.sections]
"typing" = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = [
  "S101",  # Use of assert detected (assert allowed in tests)
  "PLR2004",  # Magic value used in comparison
  "F841",  # Unused variable
  "F401",  # Unused import
  "SLF001",  # Private member accessed
  "ARG002",  # Unused function argument
  "S108",  # Probable insecure usage of temporary file
  "SIM101",
]
"__init__.py" = [
  "F401",  # Unused import
  "F403",  # Import star
  "ARG001",  # Unused function argument (using fixtures from other fixtures)
]

[tool.ruff.lint.pycodestyle]  # https://docs.astral.sh/ruff/settings/#pycodestyle
max-doc-length = 100

[tool.ruff.lint.pydocstyle]  # https://docs.astral.sh/ruff/settings/#pydocstyle
convention = "google"

[tool.ruff.lint.pylint]  # https://docs.astral.sh/ruff/settings/#pylint
allow-dunder-method-names = ["__tablename__", "__table_args__"]
allow-magic-value-types = ["int", "str", "bytes"]
max-args = 10
max-statements = 25

[tool.uv.workspace]
members = ["core", "services/*"]  # https://docs.astral.sh/uv/concepts/projects/workspaces/
